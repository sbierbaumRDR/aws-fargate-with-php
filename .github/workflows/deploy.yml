name: Building an pushing to Docker registry

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-north-1
          role-to-assume: arn:aws:iam::992382620976:role/GitHubAction-AssumeRoleWithAction
          role-session-name: MySessionName

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

#      - name: "Build, tag, push image: nginx"
#        id: build-image-nginx
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: nginx
#          IMAGE_TAG: latest
#        run: |
#          docker build -t 992382620976.dkr.ecr.eu-north-1.amazonaws.com/nginx:$IMAGE_TAG --target laravelapp_nginx .
#          docker push 992382620976.dkr.ecr.eu-north-1.amazonaws.com/nginx:$IMAGE_TAG
#          echo "::set-output name=image::992382620976.dkr.ecr.eu-north-1.amazonaws.com/nginx:$IMAGE_TAG"
#
      - name: "Build, tag, push image: php-fpm"
        id: build-image-php-fpm
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: php-fpm
          IMAGE_TAG: latest
        run: |
          docker build -t 992382620976.dkr.ecr.eu-north-1.amazonaws.com/php:$IMAGE_TAG --target laravelapp_php .
          docker push 992382620976.dkr.ecr.eu-north-1.amazonaws.com/php:$IMAGE_TAG
          echo "::set-output name=image::992382620976.dkr.ecr.eu-north-1.amazonaws.com/php:$IMAGE_TAG"

#      - name: "Build, tag, push image: nodejs"
#        id: build-image-nodejs
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: nodejs
#          IMAGE_TAG: latest
#        run: |
#          docker build -t 992382620976.dkr.ecr.eu-north-1.amazonaws.com/php:$IMAGE_TAG --target laravelapp_nodejs .
#          docker push 992382620976.dkr.ecr.eu-north-1.amazonaws.com/php:$IMAGE_TAG
#          echo "::set-output name=image::992382620976.dkr.ecr.eu-north-1.amazonaws.com/php:$IMAGE_TAG"
#
#      - name: "Render task definition: nginx"
#        id: task-def-nginx
#        uses: aws-actions/amazon-ecs-render-task-definition@v1
#        with:
#          task-definition: task-definition.json
#          container-name: nginx
#          image: ${{ steps.build-image-nginx.outputs.image }}
#
      - name: "Render task definition: php-fpm"
        id: task-def-php-fpm
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-nginx.outputs.task-definition }}
          container-name: php-fpm
          image: ${{ steps.build-image-php-fpm.outputs.image }}
#
#      - name: "Render task definition: nodejs"
#        id: task-def-nodejs
#        uses: aws-actions/amazon-ecs-render-task-definition@v1
#        with:
#          task-definition: ${{ steps.task-def-php-fpm.outputs.task-definition }}
#          container-name: nodejs
#          image: ${{ steps.build-image-nodejs.outputs.image }}
#
#      - name: "Deploy Amazon ECS task definition"
#        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#        with:
#          task-definition: ${{ steps.task-def-nodejs.outputs.task-definition }}
#          service: laravel-app-service
#          cluster: laravel-app
#          wait-for-service-stability: false

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
